package com.ffffffff0x.exploit;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.List;
import java.util.Random;

@Controller
@Slf4j
public class UploadController {

    @Value("${file.upload.path}")
    private String path;

    @GetMapping("/upload")
    public String uploadPage() {
        return "upload";
    }

    // 无过滤
    @PostMapping("/upload")
    @ResponseBody
    public String create(@RequestPart MultipartFile file) throws IOException {
        String fileName = file.getOriginalFilename();
        String filePath = path + fileName;

        try {
            File dest = new File(filePath);
            Files.copy(file.getInputStream(), dest.toPath());
            return "文件上传成功 : " + dest.getAbsolutePath();

        } catch (FileAlreadyExistsException e) {
            return "文件已存在!";
        }
    }

    // 黑名单过滤
    @PostMapping("/upload2")
    @ResponseBody
    public String create2(@RequestPart MultipartFile file) throws IOException {

        List<String> suffixlist = List.of(".jsp", ".jspx");

        String fileName = file.getOriginalFilename();
        String filePath = path + fileName;

        if (!file.isEmpty()) {
            String suffix = fileName.substring(fileName.lastIndexOf("."));
            log.info("后缀名: "+suffix);
            if (suffixlist.contains(suffix)) {
                return "非法请求，请上传文档文件";
            } else {
                try {
                    File dest = new File(filePath);
                    Files.copy(file.getInputStream(), dest.toPath());
                    return "文件上传成功 : " + dest.getAbsolutePath();

                } catch (FileAlreadyExistsException e) {
                    return "文件已存在!";
                }
            }
        }

        return "";
    }

    // 白名单过滤
    // 可以路径穿越,因为 /etc/cron.d/ 目录下的文件可以任意后缀命名，那么此时可以上传文件名为 “…/…/…/…/…/…/etc/cron.d/test.xls” 绕过对应的安全检查：
    @PostMapping("/upload3")
    @ResponseBody
    public String create3(@RequestPart MultipartFile file) throws IOException {
        String fileName = file.getOriginalFilename();
        String filePath = path + fileName;

        if (!file.isEmpty()) {
            String suffix = fileName.substring(fileName.lastIndexOf("."));
            log.info("后缀名: "+suffix);
            if (!".xlsx".equals(suffix) && !".xls".equals(suffix)) {
                return "非法请求，请导入excel文件";
            } else {
                try {
                    File dest = new File(filePath);
                    Files.copy(file.getInputStream(), dest.toPath());
                    return "文件上传成功 : " + dest.getAbsolutePath();

                } catch (FileAlreadyExistsException e) {
                    return "文件已存在!";
                }
            }
        }

        return "";
    }

    // 白名单过滤+随机文件名
    @PostMapping("/safeupload")
    @ResponseBody
    public String safecreate(@RequestPart MultipartFile file) throws IOException {
        String fileName = file.getOriginalFilename();

        if(!file.isEmpty()){
            String suffix = fileName.substring(fileName.lastIndexOf("."));
            log.info("后缀名: "+suffix);
            if(!".xlsx".equals(suffix)&&!".xls".equals(suffix)){
                return "非法请求，请导入excel文件";
            }
            else {
                try {
                    Random r = new Random();
                    int randomfilename = r.nextInt(100000000);
                    String filePath = path + randomfilename + suffix;
                    log.info("生成文件名: "+filePath);
                    File dest = new File(filePath);
                    Files.copy(file.getInputStream(), dest.toPath());
                    return "文件上传成功 : " + dest.getAbsolutePath();

                } catch (FileAlreadyExistsException e) {
                    return "文件已存在!";
                }
            }
        }

        return "";
    }

}
