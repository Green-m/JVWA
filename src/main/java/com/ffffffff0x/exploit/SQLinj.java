package com.ffffffff0x.exploit;

import com.ffffffff0x.exploit.p.entity.UserPrimary;
import com.ffffffff0x.exploit.p.mapper.UserMapperPrimary;
import com.ffffffff0x.exploit.s.mapper.UserMapperSecondary;
import io.swagger.annotations.Api;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Api(tags = "SQL注入")
@RestController
@Slf4j
@RequestMapping("/sqlinj")
public class SQLinj {

    @Autowired
    private UserMapperPrimary userMapperPrimary;

    // 查询所有用户
    @GetMapping("/mysql/alluser")
    public List<UserPrimary> AllUser() {
        return userMapperPrimary.AllUser();
    }

    // 查询指定用户
    // http://127.0.0.1:8999/sqlinj/mysql/getbyid/1 or 1=1
    // http://127.0.0.1:8999/sqlinj/mysql/getbyid/1 and (select if(mid(user(),1,4)='root',sleep(1),123))
    @GetMapping("/mysql/getbyid/{id}")
    public List<UserPrimary> getById(@PathVariable String id) {
        log.info("输入的查询payload: "+id);
        return userMapperPrimary.findById(id);
    }

    // http://127.0.0.1:8999/sqlinj/mysql/getbyidp/id?id=1 or 1=1
    // http://127.0.0.1:8999/sqlinj/mysql/getbyidp/id?id=1%20and%20(select%20/**/if(%27360%27=%27360%27,/**/sleep(5),123))
    @GetMapping("/mysql/getbyidp/id")
    public List<UserPrimary> getById2(String id) {
        log.info("输入的查询payload: "+id);
        return userMapperPrimary.findById(id);
    }

    
    @GetMapping("/mysql/safegetbyidp/id")
    public List<UserPrimary> safegetById2(String id) {
        log.info("输入的查询payload: "+id);
        return userMapperPrimary.safefindById(id);
    }

    // 创建用户
    @PostMapping("/mysql/create")
    public int create(@RequestBody UserPrimary userPrimary) {
        return userMapperPrimary.insert(userPrimary.getName(), userPrimary.getAge());
    }

    @Autowired
    private UserMapperSecondary userMapperSecondary;

    // 查询所有用户
    // http://127.0.0.1:8999/sqlinj/postgre/getbyid/1 or 1=1
    @GetMapping("/postgre/alluser")
    public List<UserPrimary> PostgreAllUser() {
        return userMapperSecondary.AllUser();
    }

    // 查询指定用户
    @GetMapping("/postgre/getbyid/{id}")
    public List<UserPrimary> PostgregetById(@PathVariable String id) {
        log.info("输入的查询payload: "+id);
        return userMapperSecondary.findById(id);
    }

    // 查询指定用户
    @GetMapping("/postgre/safegetbyid/{id}")
    public List<UserPrimary> SafePostgregetById(@PathVariable String id) {
        log.info("输入的查询payload: "+id);
        return userMapperSecondary.safefindById(id);
    }

    // 创建用户
    @PostMapping("/postgre/create")
    public int Postgrecreate(@RequestBody UserPrimary userPrimary) {
        return userMapperSecondary.insert(userPrimary.getName(), userPrimary.getAge());
    }

    // 创建用户
    @PostMapping("/postgre/create")
    public int Postgrecreate(@RequestBody UserPrimary userPrimary) {
        return userMapperSecondary.unsafeinsert(userPrimary.getName(), userPrimary.getAge());
    }

}
