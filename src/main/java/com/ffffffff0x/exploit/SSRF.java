package com.ffffffff0x.exploit;

import com.ffffffff0x.exploit.util.Http;
import com.ffffffff0x.exploit.util.Security;
import io.swagger.annotations.Api;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.net.InetAddress;
import java.net.MalformedURLException;
import java.net.URL;

@Api(tags = "SSRF")
@Slf4j
@RestController
@RequestMapping("/ssrf")
public class SSRF {

    // 无过滤
    // http://127.0.0.1:8999/ssrf/1?url=https://home.ffffffff0x.com
    // http://127.0.0.1:8999/ssrf/1?url=file:///etc/passwd

    // jar 协议
    // http://127.0.0.1:8999/ssrf/1?url=jar:http://www.ffffffff0x.com!/
    // http://127.0.0.1:8999/ssrf/1?url=jar:http://www.ffffffff0x1231edadada.com!/
    @GetMapping("/1")
    public String vul1(String url) {
        log.info("访问路径：" + url);
        return Http.URLConnection(url);
    }

    // 重定向绕过
    // 使用 url短链接进行绕过
    // 例如 https://a.f8x.io/
    // file:///etc/passwd https://a.f8x.io/AKJ28Q
    // http://127.0.0.1:8999/ssrf/2?url=https://a.f8x.io/AKJ28Q
    @GetMapping("/2")
    public String vul2(String url) {
        log.info("访问路径：" + url);

        try{
            URL url2 = new URL(url);
            String host = url2.getHost();
            InetAddress ip = InetAddress.getByName(host);
            //log.info("ip：" + ip);
            String ip2 =ip.toString();
            String ip3 = ip2.substring(ip2.lastIndexOf("/") + 1 );
            log.info("ip解析结果：" + ip3);

            if (!Security.isHttp(url)){
                return "不允许非http/https协议!!!";
            }else if (Security.isIntranet(url)) {
                return "不允许访问内网!!!";
            }else if (Security.isIntranet(ip3)) {
                return "不允许访问内网!!!";
            }else{
                log.info("访问：" + url);
                return Http.URLConnection2(url);
            }

            }
        catch (java.net.UnknownHostException e) {
            return "error";
        } catch (MalformedURLException e) {
            return "error";
        }
    }

    // 安全案例
    @GetMapping("/safe")
    public String safe(String url) {
        log.info("访问路径：" + url);
        if (!Security.isHttp(url)){
            return "不允许非http/https协议!!!";
        }else if (Security.isIntranet(url)) {
            return "不允许访问内网!!!";
        }else{
            return Http.HTTPURLConnection(url);
        }
    }

}

// 参考:
// https://github.com/JoyChou93/java-sec-code/blob/master/src/main/java/org/joychou/controller/SSRF.java
// https://github.com/j3ers3/Hello-Java-Sec/blob/master/src/main/java/com/best/hello/controller/SSRF.java